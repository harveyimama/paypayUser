package com.techland.paypay.user.factories;import com.techland.paypay.contracts.PayPayEvent;import java.sql.Timestamp;import com.fasterxml.jackson.databind.JsonNode;import com.fasterxml.jackson.databind.ObjectMapper;import com.techland.paypay.user.events.MerchantUserAddedEvent;public class EventFactory {static PayPayEvent paypayEvent;	public EventFactory(PayPayEvent evt) { paypayEvent = evt;} @SuppressWarnings("unchecked") public static <T extends PayPayEvent> T getEvent(String event,String name,String eventId) {try {if ("Merchant.UserMerchantAddedEvent".equals(name)){ObjectMapper mapper = new ObjectMapper();JsonNode actualObj = mapper.readTree(event);Timestamp t;if(actualObj.has("timestamp"))t = new Timestamp(actualObj.get("timestamp").asLong());else t =new Timestamp(System.currentTimeMillis());MerchantUserAddedEvent u =  new MerchantUserAddedEvent(actualObj.get("id").asText(),actualObj.get("username").asText(),actualObj.get("password").asText(),actualObj.get("email").asText(),actualObj.get("fullname").asText(),actualObj.get("role").asText(),actualObj.get("userId").asText(),t,eventId==null?actualObj.get("eventId").asText():eventId); return (T) u;}else {return null;}} catch (Exception e) {e.printStackTrace();return null;}}}